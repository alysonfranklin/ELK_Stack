version: '2.3'
services:

  # RabbitMQ - Servidor de Mensageria - Enfileiramento de Logs
  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq:3-management-alpine
    volumes:
      - mq_data:/var/lib/rabbitmq/mnesia
    ports:
      - "15672:15672"
      - "5672:5672" 
    networks:
      - log
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: 123qwe
      RABBITMQ_DEFAULT_VHOST: DevOps

  # LogStash - Pipeline - Estrutura de transporte
  logstash:
    container_name: LogStash    
    image: docker.elastic.co/logstash/logstash-oss:6.4.3
    volumes:
      - ./logstash.conf:/config/logstash.conf      
    depends_on:
      - rabbitmq # LogStash depende do RabbitMQ, pois ele precisa consumir da fila
      - elasticsearch # LogStash depende do ElasticSearch para gravar os logs no ElasticSearch
    links:
      - rabbitmq:AMQPServer
      - elasticsearch:elasticsearch
    networks:
      - log    
    command: ["-f", "/config/logstash.conf"]


  # ElasticSearch - Backend NoSQL Baseado em Apache Lucene
  elasticsearch:
    container_name: ElasticSearch    
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.2
    environment: 
      - "http.host:0.0.0.0"
      - "transport.host:127.0.0.1"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes: 
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch_data:/usr/share/elasticsearch/data      
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:9200 || exit"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - log

  # Kibana - Visualização de Logs - kibana irá apresentar os logs criados no ElasticSearch
  kibana:
    container_name: Kibana    
    image: docker.elastic.co/kibana/kibana-oss:6.2.2
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml   
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    links:
      - elasticsearch:elasticsearch

    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:5601 || exit"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch:9200/      
    networks:
      - log
  
  # MetricBeat - Monitora servidores coletando métricas do sistema e dos serviços em execução no servidor
  metricbeat:
    container_name: metricbeat
    image: store/elastic/metricbeat:6.6.2
    volumes:
      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      kibana:
        condition: service_healthy
    links:
      - kibana:kibana
    networks:
      - log

volumes:
  mq_data:
  elasticsearch_data:

networks:
  log:
    driver: bridge